#/***************************************************************************
#
# TextEditor.mcc - Textediting MUI Custom Class
# Copyright (C) 1997-2000 Allan Odgaard
# Copyright (C) 2005-2007 by TextEditor.mcc Open Source Team
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# TextEditor class Support Site:  http://www.sf.net/projects/texteditor-mcc
#
# $Id: Makefile.os3 121 2005-06-12 08:20:20Z damato $
#
#***************************************************************************/

# Programs
CC    = m68k-amigaos-gcc
STRIP = m68k-amigaos-strip
RM    = rm -f
RMDIR = rm -rf
MKDIR	= mkdir
CP    = cp

# Directories
OBJDIR = .obj_os3
BINDIR = bin_os3

# Compiler/Linker flags
CPU      = -m68020-60 -msoft-float
CDEFS    = -D__NLV_VERDATE=\"`date +%d.%m.%Y`\" -D__NLV_VERDAYS="`expr \`date +%s\` / 86400 - 2922`"
WARN     = -W -Wall
OPTFLAGS = -O3 -fomit-frame-pointer -funroll-loops
DEBUG    = -DDEBUG -g -O0
CFLAGS   = -noixemul -I. -I../mcp -I../includes -c $(CPU) $(WARN) $(OPTFLAGS) $(DEBUG)
LDFLAGS  = -noixemul $(CPU)
LDLIBS   = -lmui -ldebug

# CPU and DEBUG can be defined outside, defaults to above
# using e.g. "make DEBUG= CPU=-m68060" produces optimized non-debug 68060 version
#
# OPTFLAGS are disabled by DEBUG normally!
#
# ignored warnings are:
# none - because we want to compile with -Wall all the time
#

TARGET = $(BINDIR)/TextEditor-Demo

OBJS = $(OBJDIR)/TextEditor-Demo.o

#

all: $(BINDIR) $(OBJDIR) $(TARGET)

# make the object directories
$(OBJDIR):
	@printf '\033[33mGenerating $@ directory\033[0m\n'
	@$(MKDIR) $(OBJDIR)

# make the binary directories
$(BINDIR):
	@printf '\033[33mGenerating $@ directory\033[0m\n'
	@$(MKDIR) $(BINDIR)

#

$(OBJDIR)/%.o: %.c
	@printf '\033[32mCompiling $<\033[0m\n'
	@$(CC) $(CFLAGS) $< -o $@ -DNO_INLINE_STDARG

#

$(TARGET): $(OBJS)
	@printf '\033[32mLinking \033[1m$@\033[0m\n'
	@$(CC) -o $@.debug $(OBJS) $(LDLIBS)
	@$(CC) -s -o $@ $(OBJS) $(LDLIBS)

#

.PHONY: clean
clean:
	-$(RM) $(TARGET) $(TARGET).debug $(OBJS)

.PHONY: distclean
distclean: clean
	-$(RMDIR) $(OBJDIR)
	-$(RMDIR) $(BINDIR)
