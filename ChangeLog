------------------------------------
MUI TextEditor MCC class - ChangeLog
------------------------------------

$Id$
$URL$

#### v15.22 RELEASE ############################################################

2007-07-25  Thore Böckelmann <tboeckel@gmx.de>

  * #?/library.c: now really uses the 3 parameter version of GETINTERFACE()
    defined in mccinit.c instead of the old obsolete version in mcc_common.h.
    The user definable functions (i.e. ClassInit()) must be declared before
    the inclusion of mccinit.c.
  * include/mccinit.c: updated to latest 1.8 version which really uses the
    GETINTERFACE() macro with 3 parameters.

2007-07-25 Jens Langner <Jens.Langner@light-speed.de>
 
  * PrintLineWithStyles.c: replaced 0xc0 minterm by "(ABC|ABNC)" which in
    fact will do the very same, but is more descriptive.
  * include/mccinit.c: updated to latest 1.7 version
  * misc: adapted MEMF_#? allocation flags to use MEMF_SHARED whereever
    appropriate.

2007-07-24  Thore Böckelmann <tboeckel@gmx.de>

  * include/mccinit.c: updated to latest 1.6 version which fixes an unbalanced
    if statement.

2007-07-24 Jens Langner <Jens.Langner@light-speed.de>
 
  * PrintLineWithStyles.c: the inactive cursor wasn't drawn when the window in
    which the gadgets resists was being resized. Now the inactive cursor
    should always be layouted.
  * HandleInput.c: when resetting the previous cursor position we make sure
    the gadget is flagged as activated or otherwise a reactivated gadget might
    not reset the cursor sign properly and end up in multiple inactive cursor
    signs being shown.

2007-07-22 Jens Langner <Jens.Langner@light-speed.de>

  * misc: added new MUIA_TextEditor_WrapMode attribute which can now be set to
    either NoWrap, SoftWrap or HardWrap to set the wanted word wrapping mode. Whereas
    HardWrap is the default as in previous versions, SoftWrap should be considered
    the new setting that should be used in new and revised applications as it allows
    to set the number of characters at which the texteditor will soft wrap word, but
    keep them logically together. This allows to easily concatenate lines by just
    e.g. removing characters again. NoWrap, in contrast, will completly disable word
    wrapping and will require a user to enlarge the gadget himself to fit the text as
    currently TextEditor.mcc can't scroll horizontal.
  * MixedFunctions.c: when the gadgets is in inactive/unactivated state, the cursor
    will be drawn by just its outline to make it easier to identify where it last
    resisted when the gadget is being activated again.

2007-07-18 Jens Langner <Jens.Langner@light-speed.de>

  * include/mccinit.c: updated to latest 1.4 version which uses a new inline
    assembler version for those platforms where a StackSwap() is required (e.g.
    MorphOS/AmigaOS3).

2007-07-04  Thore Böckelmann <tboeckel@gmx.de>

  * include/mccinit.c: put the StackSwapStruct structure on the stack to avoid
    crashes.

2007-07-04 Jens Langner <Jens.Langner@light-speed.de>

  * include/mccinit.c: updated to latest 1.3 version which introduces a stackswap
    mechanism for OS3/MorphOS systems so that they may not run out of stack when
    running through the various library initialization routines.

2007-07-01 Jens Langner <Jens.Langner@light-speed.de>

  * include/mccinit.c: updated to latest 1.2 version which fixes some library
    manager initialization issues.

2007-06-25  Thore Böckelmann <tboeckel@gmx.de>

  * misc: the number of undo levels can now be set by the application. A value
    of zero means that undo/redo is completely disabled. It is also possible to
    disable undo/redo globally by setting the level to zero. This fulfils
    feature request #1479534.

2007-06-20  Thore Böckelmann <tboeckel@gmx.de>

  * mcp/locale/french.ct: updated the french translation which kindly has been
    provided by Alexandre Balaban.

2007-06-18 Jens Langner <Jens.Langner@light-speed.de>

  * EditorStuff.c, MixedFunctions.c, Navigation.c, private.h: as the LineCharsWidth()
    function can now return 0 all usage situations have to make sure that they can
    handle a zero return value. This should e.g. fix an endless loop situation when
    tripleclicking on a line.

2007-06-13  Thore Böckelmann <tboeckel@gmx.de>

  * #?/Debug.c: unified the _DPRINTF() functions for all platforms.

2007-06-10 Jens Langner <Jens.Langner@light-speed.de>

  * #?/Makefile: minor update/optimization on Makefiles.
  * include/mccinit.c: updated to latest 1.1 version which should fix possible
    stack issues during the LibInit() phase. Custom libraries will now be opened
    during the LibOpen() phase instead while maintaining an own mutual exclusive
    locking variable.

2007-06-09 Jens Langner <Jens.Langner@light-speed.de>

  * include/mccinit.c, mcc/library.c, mcp/library.c: replaced the old obsolete
    mccheader.c by the new mccinit.c which should come with a much more clear
    interface and documentation on how to use it for a basis of a MUI custom
    class. This should significantly reduce the possibility of race conditions
    in the mcc/library init code.

2007-05-29  Thore Böckelmann <tboeckel@gmx.de>

  * include/mccheader.c: reworked the LibOpen() and LibClose() functions to
    increment/decrement the lib_Open counter before obtaining the semaphore to
    prevent a possible race condition with LibExpunge().

2007-05-18 Jens Langner <Jens.Langner@light-speed.de>

   * MixedFunctions.c: minor twirks to the LineCharsWidth() function to catch
     a possible issue when calculating the string length.

2007-04-16 Jens Langner <Jens.Langner@light-speed.de>

   * mcp/locale/dansk.ct: added new danish translation kindly provided by
     Niels Bache.

2007-03-23  Thore Böckelmann <tboeckel@gmx.de>

   * #?/Debug.c: fixed wrong final output of debug classes and flags.

2007-03-11 Jens Langner <Jens.Langner@light-speed.de>

   * mcp/locale/russian.ct: applied patch to russian catalog description
     updates, kindly provided by Vinny Vinogradov.

2007-03-11 Thore Böckelmann <tboeckel@gmx.de>

   * #?/Debug.c: disabling a debug flag was not possible due to a check for the
     '!' at a wrong index.

2007-03-10 Pär Boberg <pbobbenb@spray.se>

   * mcp/locale/svenska.ct: Updated according to changes.

#### v15.21 RELEASE ############################################################

2007-03-07 Jens Langner <Jens.Langner@light-speed.de>

   * mcp/KeyStorage.c, mcp/CreatePrefsGroup.c: fixed bug #1669685 where due to
     an incorrect iteration through the keybindings structure, TextEditor.mcp
     crashed on OS3/m68k setups.
   * mcc: replaced all get() uses with the more save xget().
   * mcc/HandleArexx.c: the HandleArexx() function was returning a 'BOOL'
     which wasn't entirely correct as it might also return a string on commands
     like 'GETCURSOR'. In that case it might have happend that the result
     variable was truncated and caused and unexpected crash.
   * mcp/Makefile: added 'catalogs' target to Makefile so that catalogs can
     be generated on-the-fly more easily.

2007-03-02 Thore Böckelmann <tboeckel@gmx.de>

   * mcp/locale/deutsch.ct: updated the german translation according to the
     latest changes.
   * mcp/CreatePrefsGroup.c: the version check for Hotkeystring.mcc didn't
     handle future versions correctly (i.e. 13.0). A too old object is also
     disposed before the creation fails to let the user install a new version
     without the need to reboot.

2007-03-01 Jens Langner <Jens.Langner@light-speed.de>

   * mcp/CreatePrefsGroup.c: added a check if the required Hotkeystring.mcc
     class could be found and if it is the minimum required version we need.
   * mcp/CreatePrefsGroup.c: replaced compile time _ASSERT() with our new
     runtime ASSERT() in Debug.c,h.

2007-02-28 Thore Böckelmann <tboeckel@gmx.de>

   * mcp/locale/deutsch.ct: fixed wrong warning text.
   * mcp/locale/deutsch.ct: added updated german translation. I hope this one
     is a little bit better than the old one.
   * mcp/CreatePrefsGroup.c: the Snoop button is no longer deactivated auto-
     matically but must be deactivated manually. Before it was not really
     possible to enter combinations of qualifiers and keys, because as soon as
     a qualifier was pressed the snopping was deactivated.

2007-02-27 Thore Böckelmann <tboeckel@gmx.de>

   * mcp/KeyStorage.c: hotkey parsing doesn't use loops anymore to prevent un-
     predictable side effects. Also added some safety check before accessing
     the KEY argument to prevent possible NULL pointer accesses.
   * doc/MCC_TextEditor.doc: the new MUIM_TextEditor_QueryKeyAction method was
     missing in the table of contents and was not properly sorted in the range
     of all methods.

2007-02-26 Jens Langner <Jens.Langner@light-speed.de>

   * mcc/Keybindings.c: updated the default keybinding in the MCC according
     to the recent changes in the MCP (RSHIFT->SHIFT change).
   * mcp/CreatePrefsGroup.c: fixed bug in the Popobject popup hooks which
     contained a wrong indexing and therefore did select the wrong item in the
     poplist of the keybindings.

2007-02-26 Thore Böckelmann <tboeckel@gmx.de>

   * mcp/Keybindings.c: changed all occurences of IEQUALIFIER_RSHIFT to
     IEQUALIFIER_SHIFT as it unnecessary to force the user to use a specific
     shift key.

#### v15.20 RELEASE ############################################################

2007-02-25 Jens Langner <Jens.Langner@light-speed.de>

   * mcc/HandleArexx.c: added new "SELECTALL"and "SELECTNONE" Arexx commands
     to be able to also perform the same actions via the ARexx interface.
   * mcc: introduced a new MUIM_TextEditor_QueryKeyAction method that allows
     to retrieve the key code and qualifier information for a specified action.
     Please note, that this method normally returns the direct RAWKEY value
     and that for a vanilla key identification an offset of 500 is added.
   * mcc/Methods.c: modified MUIM_TextEditor_MarkText method to allow to select
     ALL and NO text of the texteditor according to the new SelectAll and
     SelectNone actions.
   * mcc/HandleInput.c: the 'SelectAll' and 'SelectNone' key actions should
     work now as expected.
   * mcc/mcp: synced the internals how the default keybindings are managed and
     exported the key action value to the _mcc.h file. This should allow to
     provide a method in future to query the keybinding of a keyaction for
     third party applications. In addition, "Select All" and "Select None" was
     added to allow for keybindings of selecting all/no text with a RCOMMAND+A
     hotkey.
   * mcc/HandleInput.c: changed the automatic word wrapping mechanism to find
     the wrap position around the user-specified WrapBorder value instead of
     always word wrapping at the cursor position only. This should make the word
     wrapping behaviour more consistent.

2007-02-18 Thore Böckelmann <tboeckel@gmx.de>

   * mcp/KeyStorage.c: key combinations like "shift up" were always converted
     to "shift right" because of a wrong index calculation.

2007-01-29 Thore Böckelmann <tboeckel@gmx.de>

   * mcc/Dispatcher.c: the OM_NEW method must be handled before the instance
     data are retrieved, because nobody can predict what INST_DATA() will return
     if it is invoked on a not yet created object. This can explain the random
     crashes on OS4 when TextEditor.mcc tried to access unallocated memory.

2007-01-28 Jens Langner <Jens.Langner@light-speed.de>

   * mcp: renamed the GetStr() locale translation function to the much shorter
     tr() naming and adapted all files to it.

2007-01-27 Jens Langner <Jens.Langner@light-speed.de>

   * mcp: fixed several non-critical compiler warnings.
   * Makefile: removed all target specific (os4,os3,mos) makefiles and replaced
     them with a single 'Makefile' for all our sub-projects. This new makefile
     includes methods to automatically identify the HOST and TARGET opererating
     system and compiles the sources for the found target OS. In addition, that
     Makefile can be used to also compile for all supported targets via
     'make OS=XXX' where XXX is the abbreviation for the operating system.

2007-01-02 Jens Langner <Jens.Langner@light-speed.de>

   * misc: updated all copyright notices to 2007.
   * mcp/locale/french.ct: added french mcp catalog translation kindly
     provided by Philippe Bovier.

2006-12-02 Jens Langner <Jens.Langner@light-speed.de>

   * mcc/private.h: minor code restructuring to prepare for a larger debug
     session so that we finally can hunt down that "crashes on YAM startup" with
     TextEditor.mcc involved.

2006-11-27 Thore Böckelmann <tboeckel@gmx.de>

   * mcc/EditorStuff.c: when pasting a clip which contained some colors or
     styles we trashed memory because the allocation was always 2 bytes too
     small. This happend because TextEditor.mcc terminates the color and style
     arrays with special values which are not included in its own clipboard
     files and hence their length isn't contained in the IFF header length.
   * Debug.c: added correct copyright header and fixed some typos

#### v15.19 RELEASE ############################################################

2006-11-12 Jens Langner <Jens.Langner@light-speed.de>

   * mcc/BlockOperators.c: fixed a bug where not the whole ExportMessage
     structure was cleared and caused the Undo/Redo functionality to end up
     broken.
   * mcc/ExportBlock.c: fixed a minor issue with the new ExportBlock functionality
     where unmarked text wasn't exported correctly due to an old marking structure.

2006-10-17 Ilkka Lehtoranta <ilkleht@isoveli.org>

   * mcc/EditorStuff.c: Fixed Wipeout hit in PasteClip() where NULL termination
     could accidentally trash innocent memory.
   * mcc/BlockOperators.c: Removed MorphOS workaround and adjusted code to work
     on all flavours.

2006-10-13 Ilkka Lehtoranta <ilkleht@isoveli.org>

   * mcc/BlockOperators.c: Added workaround to serious bug in iffparse.library
     supplied with MorphOS. Library barfs when the same chunk is pushed again.
     While this bug is fixed in V51 version of iffparse.library we must settle
     for this solution for now. In order to keep MorphOS specific code short
     style and color information is not stored.

2006-10-11 Ilkka Lehtoranta <ilkleht@isoveli.org>

   * mcc/Debug.c: added a dummy abort() function to fix non-OS4 debug builds.

2006-10-08 Jens Langner <Jens.Langner@light-speed.de>

   * mcc/SpellChecker.c: fixed bug #1545493 where the spellchecker routines
     didn't correctly supply the whole word under the cursor and always stripped
     one char at the end. That rendered the spellchecker functionality kinda
     useless.
   * mcc/MixedFunctions.c: fixed bug #1385277 where on a fresh object where
     the MUIM_Setup method never was used, the LineCharsWidth() function
     caused a crash if the InsertText method was used.
   * mcp/Makefile.os4, mcc/Makefile.os4: modified to always keep function
     symbols in the binary, even in release mode.
   * mcc/ExportBlock.c, misc: implemented new MUIM_TextEditor_ExportBlock
     method which will export only the currently marked text instead of the
     whole text like it's ExportText variant. Implemented an additional
     MUIF_TextEditor_ExportBlock_FullLines flag symbol which will export all
     complete lines where marked text was found on.
   * mcp: adapted build to new public header file in 'includes' directory.

2006-10-07 Jens Langner <Jens.Langner@light-speed.de>

   * mcc/TextEditor_mcc.h: removed and merge content into a public header
     file located in the 'includes' directory instead.
   * mcc/ExportHook.c: added new MUIV_TextEditor_ExportHook_NoStyle which will
     export all text, but strip all ESC sequences.

2006-10-06 Jens Langner <Jens.Langner@light-speed.de>

   * includes/SDI_hook.h, misc: updated to latest version and adapted our whole
     Dispatcher functions accordingly.
   * mcc/classact: removed unrequired subdir.

2006-10-03 Thore Böckelmann <tboeckel@gmx.de>

   * misc: removed all that ClassAct stuff, as TextEditor.mcc is an MUI class
     only now.

2006-10-03 Thore Böckelmann <tboeckel@gmx.de>

   * Debug.c: added new 'clipboard' debug class.
   * mcc/EditorStuff.c: fixed bug #1462840 by replacing the handcrafted IFF
     parsing routine by calls to iffparse.library. Pasting clips from
     PageStream did not work, becasue PGS embeds FORM-FTXT chunks in CAT-CLIP
     files. The old functions just recognized simple FORM-FTXT files.
   * mcc/BlockOperators.c: replaced all handcrafted IFF writing functions by
     calls to iffparse.library. This makes it much easier to extend clip
     handling. The complete handcrafted access to clipboard.device is gone now.
   * mcc/SpellChecker.c: FindPort() was called without being surrounded by
     Forbid() and Permit().
   * mcc/TextEditor-Test.c, mcc/library.c: added necessary definitions of
     IFFParseBase and IIFFParse to make use of iffparse.library
   * Makefile.os4: removed "-pipe" from all CFLAGS definitions, because the OS4
     native GCC doesn't seem to handle this correctly.

2006-09-27 Jens Langner <Jens.Langner@light-speed.de>

   * HandleARexx.c: fixed a recently introduced bug where the Arexx support was
     somewhat broken.
   * Debug.c: added new 'arexx' debug class.

2006-09-25 Jens Langner <Jens.Langner@light-speed.de>

   * misc: general minor cleanup of certain areas. added -Wwrite-strings to all
     GCC makefiles. That should make sure we don't accidently write into const
     strings.

#### v15.18 RELEASE ############################################################

2006-08-18 Jens Langner <Jens.Langner@light-speed.de>

   * misc: final 15.18 release preparations.
   * all: replaced all non bufferoverflow safe functions like sprintf() with
     bufferoverflow safe variants. This should hopefully increase the stability
     of TextEditor.mcc once more.

2006-08-15 Jens Langner <Jens.Langner@light-speed.de>

   * mcc/ExportHook.c: fixed bug #1493239 and #1376640 where the ExportHook()
     functionality didn't correctly NUL-terminate the exported strings and
     therefore caused problems with the Undo/Redo functionality.

2006-08-14 Jens Langner <Jens.Langner@light-speed.de>

   * demo/TextEditor-Demo.c: added Makefiles for all 3 major targets and
     fixed all still existing compiler warnings and problems when compiling
     the demonstration program.

2006-07-07 Mathias Parnaudeau <mathias.p@wanadoo.fr>

   * demo/TextEditor-Demo.c : After deep changes it now compiles and runs
     with vbcc, GCC and SAS/C (tested on MorphOS and OS4) [bug #1376518].
   * mcc/Dispatcher.c : Added the support of MUIV_TextEditor_InsertText_Top
     and MUIV_TextEditor_InsertText_Bottom [bug #1416562].

2006-06-12 Ilkka Lehtoranta <ilkleht@isoveli.org>

   * mcc/GetSetAttrs.c: MUIA_Font now returns the text editor font always
     (patch by Mathias Parnaudedau).

2006-06-01 Ilkka Lehtoranta <ilkleht@isoveli.org>

   * mcc/SpellChecker.c: fall back to manual search path duplication if
     WorkbenchControl() call fails. MorphOS is shipped with workbench.library
     having version number greater than 44 but search path routines were not
     implemented until V50.16. Disabled WBCTRLA_FreeSearchPath for MOS because
     it does nothing in the most MOS installs.

2006-04-13 Jens Langner <Jens.Langner@light-speed.de>

   * mcp/KeyStorage.c: adapted MEDIA key definition to latest OS4 SDK.
   * Makefile.mos: moved the .comment section strip definition to its more apprpriate
     section (the top-level programs definition is just for overriding the command
     name by the user).
   * Makefile.os4: switched to newlib compilation/linkage per default and removed
     the unecessary -ldebug link definition.
   * Debug.c: replaced the KPutFmt() use by direct calls to OS4 exec debug functions
     were appropriate.
   * mccheader.c: added support for OS4/newlib use and slightly reintroduced
     some of the parts previously stripped by Gunther. We really should prefer
     code readability instead of minimizing passages.

2006-04-10 Gunther Nikl <gni@gecko.de>

   * include/mccheader.c: Fix ROMTag for non-OS4 systems.
   * mcc/Makefile.mos, mcp/Makefile.mos: remove comment section.

2006-04-05 Jens Langner <Jens.Langner@light-speed.de>

   * mccheader.c: slightly reworked the library init/expunge/open/close
     interface to make the library handling a bit more robust.

2006-01-17 Jens Langner <Jens.Langner@light-speed.de>

   * mcp/locale: added russian catalog translation kindly created and
     provided by Michael Malyshev

2005-12-09 Gunther Nikl <gni@gecko.de>

   * mcp/private.h (FunctionName): Make "char *".
     mcp/ObjectCreator.c (FunctionName): Adapt.
     (PrefsObject): Use loops to initialize arrays.

#### v15.17 RELEASE ############################################################

2005-12-07 Jens Langner <Jens.Langner@light-speed.de>

   * mcc/HandleInput.c,Methods.c: fixed the long-standing bug #1286500 where
     TextEditor.mcc deleted/overwrote certain text passages if the mouse was
     initially used to position the cursor within some text. This really was
     a very old bug, very hard to reproduce and very annoying. But due to
     the help of the reporter of that bug it was much more easier to identify
     and eliminate. Thanks AlexC.

2005-08-16 Jens Langner <Jens.Langner@light-speed.de>

   * mcc/Dispatcher.c: fixed a crash bug in the MUIM_Setup function where we did
     forgot to initialize the font pointer if no explicit font was configured by
     the user.

2005-08-11 Ilkka Lehtoranta <ilkleht@isoveli.org>

   * mcc/Makefile.mos: Added 'dump' rule to actually make some use of debug
     binaries. Didn't change other makefiles (probably not interesting).

2005-08-08 Gunther Nikl <gni@gecko.de>

   * mcc/ExportText.c, mcc/TextEditor-Test.c, ChangeLog: Fix typos.

2005-08-07 Jens Langner <Jens.Langner@light-speed.de>

   * mcc: reverted ilkka's fix on VisualHeight() because it didn't catch all
     cases which gave trouble on a hidden TextEditor object. Now all TextFit()
     and TextLength() functions always use a temporary rastport for finding
     out the text limits. In addition, some checks for data->rport and
     data->shown were added to various functions such that a texteditor object
     should not crash anymore if it is used in a hidden state (e.g. hidden in
     a registergroup)

2005-08-06 Jens Langner <Jens.Langner@light-speed.de>

   * mcc/AllocFunctions.c: implemented new AllocLine/FreeLine functions where
     certain operations during the allocation/memory freeing times can be
     performed to ensure the consistency of certian other structures. In fact
     by adding checks for the global blockinfo structure in FreeLine() a
     crash bug is now fixed that occurred when having deleted some empty
     lines at the end of a document.
   * mcc/ExportHook.c,ExportText.c: fixed another bug in the undo/redo
     processing where TextEditor.mcc did always strip the last newline char
     of a line due to the bugfix of bug #1227680. Now the proper bugfix for
     that bug is located in ExportText.c instead.

2005-08-03 Gunther Nikl <gni@gecko.de>

  * mcp/CreatePrefsGroup.c/CreatePrefsGroup (editpopupdata): Move GetStr()
    calls into a separate loop to save stackspace and to reduce programsize.

2005-08-02 Ilkka Lehtoranta <ilkleht@isoveli.org>

  * mcc/Debug.c,mcc/Debug.h,mcp/Debug.c,mcp/Debug.h: Fixed KPutFmt() to use
    VNewRawDoFmt() call in MorphOS for proper vararg handling.
  * mcc/MixedFunctions.c: Added proper test for antialiased fonts in MorphOS.
  * mcc/MixedFunctions.c: Fixed VisualHeight() to not call LineCharsWidth()
    when object is not visible. Editor no longer crash in a hidden state when
    inserting text.

#### v15.16 RELEASE ############################################################

2005-08-01 Jens Langner <Jens.Langner@light-speed.de>

   * mcc/MixedFunctions.c: fixed a bug #1249673 in the SetCursor() function where
     on use of a non antialiased font, the cursor background was not successfully
     cleared and caused the cursor to leave graphical trails.

#### v15.15 RELEASE ############################################################

2005-07-31 Jens Langner <Jens.Langner@light-speed.de>

   * mcc/ImportHook.c: fixed bug #1235375 that caused the EMail import hook not
     to stop analyzing a string at the line end and caused e.g. single slashes in
     a line to set text to italic if some other text on more lines contain a
     slash as well.
   * mcc/ExportHook.c: fixed bug #1235756 where the ExportHook always cleared out
     the last character of an export operation instead of checking for the
     particular newline character we wanted to clear. This had the effect that the
     undo/redo operations of TextEditor was slightly broken and did always redo
     one character less that the undo operation cutted.
   * mcc/Dispatcher.c: fixed bug #1246944 where the use of MUIA_TextEditor_Columns
     seemed to have caused crashes because the rastport was not completly ready
     at the time the AskMinMax() method was called by MUI. Now we take the
     nominal fontwidth size attribute tf_XSize instead of using TextLength(), so
     that this function should now also hopefully match the column with a bit
     better.

2005-07-30 Jens Langner <Jens.Langner@light-speed.de>

   * mcc/HandleInput.c,Dispatcher.c: added IDCMP_EXTENDEDMOUSE support to
     catch the new wheelmouse events supported since intuition.library
     v51.28+ in AmigaOS4.
   * mcp/KeyStorage.c: changed the rawkey based wheelmouse name to carry
     a "nm_" prefix so that it refers to newmouse based wheelmouse events
     and doesn't conflict with the new wheelmouse events in AmigaOS4.

2005-07-25 Jens Langner <Jens.Langner@light-speed.de>

   * mcc/ImportHook.c: fixed a minor bug in the ImportHook routines where
     upon an import of bold/italic/underline via escape sequences always
     terminating grow elements where inserted for all possible soft-types.

2005-07-14 Ilkka Lehtoranta <ilkleht@isoveli.org>

   * mcc/TextEditor-Test.c: Request version 36 of rexxsyslib for AmigaOS
     3.0/3.1 compatibility.

2005-07-07 Jens Langner <Jens.Langner@light-speed.de>

    * mcc/library.c: added missing USEDCLASSESP define so that MUI knowns
      which mcp class belongs to the mcc.

2005-07-05 Jens Langner <Jens.Langner@light-speed.de>

    * mcc/MixedFunctions.c: fixed another possible signedness problem which
      might have caused problem with characters > 127 and was found by Georg
      Steger.

2005-07-04  Ilkka Lehtoranta <ilkleht@isoveli.org>

    * mcc/MixedFunctions.c: Antialias font detection didnt work in MorphOS
      (there isn't FSF_ANTIALIAS flag) and cursor background was not cleared
      accordingly. Rather assume font is always antialiased what is true in
      most cases.

#### v15.14 RELEASE ############################################################

2005-07-02 Jens Langner <Jens.Langner@light-speed.de>

    * mcc/ImportHook.c: fixed bug #1229129 where the new "EMail" import hook
      didn't correctly parse lines with typical email like highlight chars,
      which in fact caused applications using this import to display some
      hightligthed sections incorrect.
    * mcc/Search.c: fixed bug #1231207 where the MUIM_TextEditor_Search method
      was broken due to a changed datatype.
    * mcc/HandleInput.c: fixed a bug where after having tripleclicked on an empty
      line, another normal click on another line caused the empty line to stay
      marked.

2005-07-02 Sebastian Bauer <mail@sebastianbauer.info>

    * doc/MCC_TextEditor.doc: Described that for other import hooks than the
      plain hook, escape sequences have to be supported as well, as some
      progams have insisted on this former undocumented "feature".

2005-06-30 Jens Langner <Jens.Langner@light-speed.de>

    * mcc/HandleInput.c: if the user tripleclicks on a character that is
      a separating character the texteditor previously didn't allow to mark
      the whole line. Now always the whole line is marked if the user
      tripleclicks somewhere on a line.
    * mcc/PrintLineWithStyles.c: fixed a minor bug in the text marking display
      routines where on centered and right aligned lines not always the whole
      line was correctly displayed as being marked. Now it should be fairly
      better, however the current solution still doesn't cover all cases and
      probably requires a rewrite in some day in future :)

2005-06-28 Jens Langner <Jens.Langner@light-speed.de>

    * mcc/HandleInput.c: fixed bug #1229170 where due to a signedness problem
      characters with a code >128 couldn't be typed in under OS3.

#### v15.13 RELEASE ############################################################

2005-06-26 Jens Langner <Jens.Langner@light-speed.de>

    * mcc/PrintLineWithStyles.c: fixed a bug where we did also paint the
      non printable newline characters at the end of each line. This caused
      that with some fonts the newlines where printed with special glyphes.
    * mcc/ExportHook.c: fixed bug #1227680 where the ExportText() method did
      always export one line too much due to not clearing the last 0x0a, which
      in fact is always articial.
    * mcc/HandleInput.c, mcc/Methods.c, mcc/Navigation.c, misc: fixed another
      bunch of problems with hard wrapped lines. There were still some problems
      in correctly selecting a whole hard wrapped line by tripleclicking on it.
      Now TextEditor.mcc should hopefully behave correct with hard wrapped lines
      and display it as correct as it allows to select such lines.
    * mcc/HandleInput.c, mcc/PrintLineWithStyle.c: on a doubleclick on a word
      the editor always marked the block from zero which in fact was a bit
      unintuitive and uncommon compared to other editors. Now if a user double-
      clicks on a word that is e.g. centered only the word is marked.
      In contrast, now also the whole line is drawed marked if the line is
      triple clicked.

2005-06-24  Gunther Nikl <gni@gecko.de>

    * mcc/library.c: Only open V36 of layers.library, keymap.library and
      diskfont.library
    * mcc/BlockOperators.c, mcc/EditorStuff.c, mcc/TextEditor-Test.c: Added
      "#include <devices/clipboard.h>" for <libraries/iffparse.h>.
    * mcc/Dispatcher.c, mcc/GetSetAttrs.c, mcc/HandleInput.c: Added
      "#include <intuition/classes.h>" for INST_DATA #define.
    * mcc/private.h: Cleanup #include statements.
    * mcc/AllocBitMap.c: Free allocated bitmap on failure in non-V39 case.
      Move version check into USE_OS3 #define.
      (MUIG_AllocBitMap): Improved friend handling.
    * mcc/AllocFunctions.c: Minor changes.
    * mcc/BlockOperators.c, mcc/Dispatcher.c, mcc/EditorStuff.c, mcc/ExportHook.c,
      mcc/ExportText.c, GetSetAttrs.c, mcc/HandleARexx.c, mcc/HandleInput.c,
      mcc/ImportHook.c, mcc/ImportText.c, mcc/InitConfig.c, mcc/MixedFunctions.c,
      mcc/PrintLineWithStyles.c, mcc/Search.c, mcc/SpellChecker.c,
      mcc/StyleOperators.c: Cleanup #include statements.
    * mcc/SpellChecker.c: Fixed WorkbenchControl() replacement for GCC 3.4.x
      and newer (has to use stdarg.h macros!)
      (CloneSearchPath, FreeSearchPath): Delete >=44 check since thats what
      OpenLibrary() requests.
      (SendRexx, SendCLI): Use LONG as return type.
      (LookupWord, SuggestWord): Update to match SendRexx and SendCLI.

2005-06-18  Jens Langner <Jens.Langner@light-speed.de>

    * mcc/Navigation.c: fixed a bug in the CursorOffset() function which cures
      the problem with being unable to select the last character of a hard
      wrapped line with the mouse.

2005-06-14  Jens Langner <Jens.Langner@light-speed.de>

    * mcp/KeyStorage.c: improved the extended keycode recognition to also
      recognize NUMLOCK and the newmouse wheel events as well as the
      media keys. So now a user might more intuitively connect commands
      to these extended keycodes as well.

2005-06-12  Jens Langner <Jens.Langner@light-speed.de>

    * mcc/MixedFunctions.c: fixed bug #1215342 where on hard wrapped lines a
      single character was missing at the end of the wrapped line.
    * mcc/HandleInput.c: applied a patch from Gunther Nikl which removes the
      forbidden floating point math in the wheelmouse scrolling code to due
      our shared library nature.
    * mcc/ImportHook.c: fixed the Plain ImportHook to also call AddGrow for
      every style/color item found instead of combining them. This in fact fixes
      problems with being unable to set text bold on text that was imported.
    * mcc/TextFunctions.c: replaced own anyway slightly buggy TextLength/TextFit
      functions with the OS's own TextLength/TextFit functions and adapted sources
      accordingly.

2005-06-04  Jens Langner <Jens.Langner@light-speed.de>

    * mcc/ImportHook.c: reworked the MIME/Email based ImportHook to properly
      recognize the ESC sequences like the plain import hook does. This in fact
      seems to be the same behaviour than the old 68k ASM based ImportHooks had.
      Also improved the termination/recognition of the /,*,#,_ chars to make it
      possible to set soft styles on a particular text. This should also fix
      bug #1210745.
    * mcp: added keycodes for the extended keys available in AmigaOS4/MorphOS for
      example. Now keys like PAGE_UP/PAGE_DOWN are properly recognized by the
      preference pane and more intuitively configurable.

2005-06-01  Jens Langner <Jens.Langner@light-speed.de>

    * mcc/GetSetAttrs.c: if MUIA_Disabled is used on a TextEditor object, an
      existing slider was not automatically disabled as well. bug #1212811

#### v15.12 RELEASE ############################################################

2005-05-28  Jens Langner <Jens.Langner@light-speed.de>

    * mcp/CreatePrefsGroup.c: fixed a crash bug where the InsertHook() was
      using the passed function parameters incorrectly.
    * mcc: fixed bug #1187007 where upon using anti-aliased proportional fonts
      caused the texteditor to not correctly clear the whole cursor areas and
      therefore left some cursor "signs" back in the editor.
    * mcc/Dispatcher.c, mcc/HandleInput.c: fixed bug #1178168 where upon switching
      from another gadget to a texteditor object via the TAB key automatically
      caused that a TAB key is inserted into the text.
    * mcc/HandleInput.c: implemented wheel-mouse event recognition via the rawkey
      based NEWMOUSE standard. Now, each TextEditor.mcc object should allow to
      use an existing wheel-mouse to scroll text up/down. Previously each
      application had to implement that on its own. However, for those apps
      already having implemented it, nothing will change.

2005-05-25  Jens Langner <Jens.Langner@light-speed.de>

    * library.c: added missing USE_UTILITYBASE define which in fact was the reason
      why the last two previous releases crashed on OS3 machines. bug #1180094

#### v15.11 RELEASE ############################################################

2005-05-14  Jens Langner <Jens.Langner@light-speed.de>

    * mcc/TextFunctions.c: with help of the new debugging scheme I was
      finally able to find and fix the reason why under certain circumstances
      a texteditor.mcc gadget could end up in an endless loop if used in write
      mode. This should fix bug #1180094, #1181948.
    * misc: after having finally found a reproduceable case for bug #1180094
      and similar reports, I tight together a complete runtime debugging
      system similar to the one in YAM. It should help in finding this and
      other bugs more easily in future. This new debugging system will search
      for an "texteditor.mcc.debug" ENV variable and does accept similar
      variable content identifies like in YAM. E.g. to pull out all possible
      debug information, compile with -DDEBUG (is the default) and set
      the env variable to "@all all". However, please review the YAM
      ChangeLog for a more detailed description on the debugging scheme.

2005-04-20  Sebastian Bauer <mail@sebastianbauer.info>

    * mcc/Keybinings.c: The default keybindings array has to be
      terminated with a -1. Problem found by Georg Steger.

2005-04-17  Sebastian Bauer <mail@sebastianbauer.info>

    * mcc/Dispatcher.c: Don't add MBQ_MUI_MAXMAX when requesting maximal
      dimension in MUIM_AskMinMax but assign MUI_MAXMAX instead.

2005-04-11  David Rey <tactica@users.sourceforge.net>

    * doc/MCC_TextEditor.guide: general rework - fixed typos and grammar;
      dropped the fancy V40+ formatting to make maintenance easier
      (sorry Allan :o); put the old (<15.10) changes in a separate page;
      documented the historic HD recovery... TODO: installation, arexx,
      credits and more
    * mcp/CreatePrefsGroup.c: no longer highlights the LGPL tidbit (it
      would be unreadable against a white background otherwise, which
      would be quite common for a text editor :); fixed typos and grammar;
      reformatted to be more readable; made the usage and arexx parts
      match what the guide says; added the missing KILLLINE, TOUPPER &
      TOLOWER ARexx commands; no longer refers the user to the AUI
      Style Guide for documentation that belongs to local docs; fixed
      wrong copyright attribution (copyright for the open source code
      begins in 2005, not in 1997)
    * mcc/rev.h, mcp/rev.h: changed copyright mark "(c)" to "(C)" for
      being generally better accepted though still not legally binding
    * doc/MCC_TextEditor.doc: likewise

2005-04-10  Jens Langner <Jens.Langner@light-speed.de>

    * includes/mccheader.c: updated common MCC include file to reflect the
      latest changes done in the nlist.mcc project.
    * includes/mccclass_68k: replaced the assembler based OS4/68k stub by an
      easier manageable C-based variant.

2005-04-10  Ilkka Lehtoranta <ilkleht@isoveli.org>

    * mcc/library.c: Request rexxsyslib.library V36 (KS 3.1) instead of V38.

#### v15.10 RELEASE ############################################################

2005-04-09  Jens Langner <Jens.Langner@light-speed.de>

    * all: last preparations for the 15.10 release. bumped version date and
      such.

2005-04-08  Ilkka Lehtoranta <ilkleht@isoveli.org>

    * mcc/SpellChecker.c: Now compiles without OS4 headers too.
    * mcc/TextEditor-Test.c: Fixed MorphOS build.
    * includes/SDI_hook.h: Changed MorphOS hooks to use HookEntry stub.

2005-04-08  Sebastian Bauer <mail@sebastianbauer.info>

    * TODO: Added two more entries (italic letter problem, tabs)

2005-04-08  Jens Langner <Jens.Langner@light-speed.de>

    * mcp/CreatePrefsGroup.c: fixed incorrectly formatted about text.
    * mcp: added missing ENTRY() calls to the Dispatchers which are required
      by the MorphOS build. However, this required to put the Create/Delete
      of our subclasses into Dispatcher.c, but now the mcp should hopefully
      work on MorphOS as well.

2005-04-07  David Rey <tactica@users.sourceforge.net>

    * doc/MCC_TextEditor.doc: fixed typos, corrected grammar, reformatted
      to make it a bit more readable and adapted to the new state of
      affairs (LGPL)

2005-04-07  Sebastian Bauer <mail@sebastianbauer.info>

    * mcc/SpellChecker.c: Reimplemented the search path feature also
      for systems not having a recent workbench.library. Code is mainly
      untested but the core is taken from YAM with permission from
      Jens Langner. So TextEditor-mcc is still LGPL ;)
      Note that this code is not included within the OS4 compile so
      this feature requires at least version 44 of workbench.library
      here. But this is a tautology.
    * mcc: No longer uses static hook declarations within functions,
      because same code of a mcc can be executed by several tasks!
    * doc/MCC_TextEditor.doc: Warn about unpredictable results of
      forbidden placement of some escape sequences for the plain import
      hook.

2005-04-06  Jens Langner <Jens.Langner@light-speed.de>

    * mcc: fixed OS3 build as well and removed all remaining compiler
      warnings.
    * mcc/Dispatcher.c: fixed recently broken OS4 build due to latest
      MorphOS changes.

2005-04-06  Ilkka Lehtoranta <ilkleht@isoveli.org>

    * mcc: Removed compiler warnings for MorphOS build.

2005-04-06  Sebastian Bauer <mail@sebastianbauer.info>

    * mcc/ImportHook.c: Changed behaviour of FindEOL() not to return NULL
      if the text only consits of a 0 byte. This fixed bug #1177619.

2005-04-05  Sebastian Bauer <mail@sebastianbauer.info>

    * mcc: Clipboard handling for copy/paste was totaly broken (don't
      confuse clipboard.device with console.device ;) ). Now only one
      pointer is used within the instance data for the clipboard io
      request.
    * mcc: Reimplemented Workbench path search support when starting shell
      commands (e.g. for the spell checkers). This however requires at
      least version 44 of workbench.library (coming with OS3.5)
    * mcc: Finished complete reimplementation of the import hooks. Because
      the nature of a reimplementation, the behaviour of the new functions
      might be different and even buggy. Exporting also works in the
      meantime.

2005-04-04  Jens Langner <Jens.Langner@light-speed.de>

    * mcc/ImportText.c: fixed bug where an empty MUIA_TextEditor_Contents
      string didn't clear the texteditor area.
    * mcc: removed the last bunch of compiler warnings and made the
      custom class compile with -DDEBUG disabled.

2005-04-01  Sebastian Bauer <mail@sebastianbauer.info>

    * mcc: Now clears the area before the text near the cursor is
      redrawn. Fixes bug #1172355 aka "anti alias bug". This is no
      april fool ;)
    * mcc: Started to reimplement all of the import and export hooks
      which were 68k asm before

2005-03-31  Sebastian Bauer <mail@sebastianbauer.info>

    * mcc: Fixed buffer overflow which happened if the font name was
      longer than 27 chars.
    * all: Enforce amiga align for the keybinding structure because
      this is exported to the settings file and has to be compatible
      with the 68k version.

2005-03-31  Gunther Nikl <gni@gecko.de>

    * all: Source cleanup and minor OS3 makefile changes.

2005-03-31  Jens Langner <Jens.Langner@light-speed.de>

    * mcp: modified preferences sources to use flexcat to generate
      the locale.c,h files out of the new TextEditor_mcp.cd and C_?.sd
      files instead of having a static locale interface.

2005-03-31  David Rey <tactica@users.sourceforge.net>

    * mcp/locale/TextEditor_mcp.cd: added

2005-03-28  Jens Langner <Jens.Langner@light-speed.de>

    * initial LGPL release published at sf.net
